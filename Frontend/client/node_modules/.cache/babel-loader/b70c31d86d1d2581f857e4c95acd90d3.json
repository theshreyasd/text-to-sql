{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAILURE } from '../../types';\nconst axiosInstance = axios.create({\n  baseURL: 'http://127.0.0.1:8000',\n  // Match your server URL\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const login = credentials => async dispatch => {\n  dispatch({\n    type: LOGIN_REQUEST\n  });\n  console.log(credentials);\n  try {\n    const response = await axiosInstance.post('/login', credentials);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: {\n        message: error.message,\n        // Store the error message\n        status: error.response ? error.response.status : null // Store status code if available\n      }\n    });\n  }\n};\nexport const register = credentials => async dispatch => {\n  dispatch({\n    type: REGISTER_REQUEST\n  });\n  try {\n    const response = await axiosInstance.post('/Register/', credentials);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: REGISTER_FAILURE,\n      payload: {\n        message: error.message,\n        // Store the error message\n        status: error.response ? error.response.status : null // Store status code if available\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","axiosInstance","create","baseURL","headers","login","credentials","dispatch","type","console","log","response","post","payload","data","error","message","status","register"],"sources":["/Users/shreyashdeshmukh/makethon-18/text-to-sql/Frontend/client/src/reduxApi/actions/authActions.js"],"sourcesContent":["import axios from 'axios';\nimport {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE, \n  REGISTER_REQUEST, \n  REGISTER_SUCCESS, \n  REGISTER_FAILURE} from '../../types'\n\n\nconst axiosInstance = axios.create({\n  baseURL: 'http://127.0.0.1:8000', // Match your server URL\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n  \n\nexport const login = (credentials) => async (dispatch) => {\n  dispatch({ type: LOGIN_REQUEST });\n  console.log(credentials)\n  try {\n    const response = await axiosInstance.post('/login', credentials);\n    dispatch({\n        type: LOGIN_SUCCESS, \n        payload: response.data \n    });\n  } catch (error) {\n    dispatch({ \n        type: LOGIN_FAILURE, \n        payload: {\n          message: error.message, // Store the error message\n          status: error.response ? error.response.status : null, // Store status code if available\n        }, \n    });\n  }\n};\n\nexport const register = (credentials) => async (dispatch) => {\n  dispatch({ type: REGISTER_REQUEST});\n  try {\n    const response = await axiosInstance.post('/Register/', credentials);\n    dispatch({\n        type: REGISTER_SUCCESS, \n        payload: response.data \n    });\n  } catch (error) {\n    dispatch({ \n        type: REGISTER_FAILURE, \n        payload: {\n          message: error.message, // Store the error message\n          status: error.response ? error.response.status : null, // Store status code if available\n        },\n    });\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,aAAa,EACbC,aAAa,EACbC,aAAa,EACbC,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,QAAO,aAAa;AAGtC,MAAMC,aAAa,GAAGP,KAAK,CAACQ,MAAM,CAAC;EACjCC,OAAO,EAAE,uBAAuB;EAAE;EAClCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAGF,OAAO,MAAMC,KAAK,GAAIC,WAAW,IAAK,MAAOC,QAAQ,IAAK;EACxDA,QAAQ,CAAC;IAAEC,IAAI,EAAEb;EAAc,CAAC,CAAC;EACjCc,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC;EACxB,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMV,aAAa,CAACW,IAAI,CAAC,QAAQ,EAAEN,WAAW,CAAC;IAChEC,QAAQ,CAAC;MACLC,IAAI,EAAEZ,aAAa;MACnBiB,OAAO,EAAEF,QAAQ,CAACG;IACtB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,QAAQ,CAAC;MACLC,IAAI,EAAEX,aAAa;MACnBgB,OAAO,EAAE;QACPG,OAAO,EAAED,KAAK,CAACC,OAAO;QAAE;QACxBC,MAAM,EAAEF,KAAK,CAACJ,QAAQ,GAAGI,KAAK,CAACJ,QAAQ,CAACM,MAAM,GAAG,IAAI,CAAE;MACzD;IACJ,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAIZ,WAAW,IAAK,MAAOC,QAAQ,IAAK;EAC3DA,QAAQ,CAAC;IAAEC,IAAI,EAAEV;EAAgB,CAAC,CAAC;EACnC,IAAI;IACF,MAAMa,QAAQ,GAAG,MAAMV,aAAa,CAACW,IAAI,CAAC,YAAY,EAAEN,WAAW,CAAC;IACpEC,QAAQ,CAAC;MACLC,IAAI,EAAET,gBAAgB;MACtBc,OAAO,EAAEF,QAAQ,CAACG;IACtB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,QAAQ,CAAC;MACLC,IAAI,EAAER,gBAAgB;MACtBa,OAAO,EAAE;QACPG,OAAO,EAAED,KAAK,CAACC,OAAO;QAAE;QACxBC,MAAM,EAAEF,KAAK,CAACJ,QAAQ,GAAGI,KAAK,CAACJ,QAAQ,CAACM,MAAM,GAAG,IAAI,CAAE;MACzD;IACJ,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}